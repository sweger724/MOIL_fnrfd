        subroutine velinit(tempi,ntemp,tpo)
        implicit none
        include 'COMMON/LENGTH.BLOCK'
        include 'COMMON/CONNECT.BLOCK'
        include 'COMMON/VELOC.BLOCK'
        include 'COMMON/UNITS.BLOCK'
        include 'COMMON/DEBUG.BLOCK'
        include 'COMMON/CONVERT.BLOCK'
c
c initialize velocities according to Boltzmann distribution
c uniform random number taken from  Numerical Recipes pp. 196
c gaussian number are generated by summing 48 uniform random
c numbers (central limit theorem). 48 is chosen since the variance
c of a single uniform number is 1/12. Hence we sample number
c from a gaussian distribution with a variance of 48/12=4
c
        integer tpo(*)
        integer ntemp,i,j
        double precision tempi(*)
        double precision factor,factor2,eps

        eps=1.0d-9

        call gauss2(3*npt,velo(1,1))
        if (ntemp.eq.1) then
         factor = dsqrt(tempi(1)*kboltzmann)
         do 3 i=1,npt
        if (ptms(i).lt.eps) go to 3
          factor2  = factor/dsqrt(ptms(i))
          velo(1,i) = velo(1,i)*factor2
          velo(2,i) = velo(2,i)*factor2
          velo(3,i) = velo(3,i)*factor2
3        continue
        else
         do 4 i=1,npt
        if (ptms(i).lt.eps) go to 4
          factor2  = dsqrt(tempi(tpo(i))*kboltzmann/ptms(i))
          velo(1,i) = velo(1,i)*factor2
          velo(2,i) = velo(2,i)*factor2
          velo(3,i) = velo(3,i)*factor2
4        continue
        end if
c@
c       do  i=1,npt
c               write(*,*)'velo',i,'=',(velo(j,i),j=1,3)
c       end do
        return
        end

      program makerc

c     program to generate a very artificial reaction coordinate
c     given an initial structure. The rc is generated by adding
c     increments (positive and negative) only to the x-coordinates
c     while keeping the center of mass at zero. -TF 22-Jul-2005

      implicit none

      include 'COMMON/LENGTH.BLOCK'
      include 'COMMON/CONNECT.BLOCK'
      include 'COMMON/ENERGY.BLOCK'
      include 'COMMON/NBLIST.BLOCK'
      include 'COMMON/UNITS.BLOCK'
      include 'COMMON/COORD.BLOCK'
      include 'COMMON/LINE.BLOCK'
      include 'COMMON/DEBUG.BLOCK'


      character*10 name
      integer namel, i, j, k, mlsts, level
      integer ucon,urcrd,of,geti,urc,urcp, npt2
      logical find, fopen
      double precision totmass, trash, sstep, step, cm(3)

      level = 1
      name = 'makerc'
      stdi   = 5
      stdo   = 6
      stderr = 0
      mlsts  = 0
      ucon   = -1
      urcrd  = -1
      urcp    = -1
      urc    = -1

c     an unfortunate necessity
      jnkf = 25
      open (unit=jnkf,status='scratch')

c     begin input loop
 1    continue
      call rline(name,namel,stdi)
      if (find('file')) then
         if (find('conn')) then
            ucon = of()
            call rconn(ucon)
         endif

         if (find('rcrd')) urcrd = of() 
         if (find('wrcp')) urcp = of()
         if (find('wxrc')) urc = of()
      end if
      mlsts = geti('#mls',mlsts)
      if (find('acti')) go to 2
      go to 1
 2    continue
c     end input loop


      if ( .not. fopen(urc) ) then
         call alert(name,namel,'urc not opened',15,level)
      else if ( .not. fopen(urcp) ) then
         call alert(name,namel,'urcp not opened',15,level)
      else if ( .not. fopen(urcrd) ) then
         call alert(name,namel,'urcrd not opened',15,level)
      else if ( .not. fopen(ucon) ) then
         call alert(name,namel,'ucon not opened',15,level)
      end if


c     compute total mass
      totmass = 0.d0
      do 1000 j = 1,npt
         totmass = totmass + ptms(j)
 1000 continue

      write(*,*) 'mlsts in rc:', mlsts
      write(*,*) 'total mass:', totmass

      read(urcrd) trash, ((coor(k,j),j=1,npt),k=1,3)

c     size of increment
      step = 0.1
      npt2 = npt / 2
      
      write(*,*) 'npt2 = ', npt2



      do 10 i = 1,mlsts
         write(*,*) 'Milestone:', i

         
         do 333 k = 1,3
            cm(k) = 0.d0
 333     continue


c        add increment from first half of peptide, and
c        subtract increment from second half of peptide
         do 11 j = 1,npt

            if ( j .lt. (npt2 + 1) ) then
               sstep = step
            else
               sstep = -step
            end if

            coor(1,j) = coor(1,j) + sstep

            do 111 k = 1,3
               cm(k) = cm(k) + ptms(j) * coor(k,j)
 111        continue
 11      continue



         do 222 k = 1,3
            cm(k) = cm(k) / totmass
 222     continue


c        now zero the center of mass
         do 13 j = 1,npt
            do 131 k = 1,3
               coor(k,j) = coor(k,j) - cm(k)
 131        continue
 13      continue


         write(urc,*) 'Milestone:', i
         write(urc,*) ((coor(k,j),k=1,3),j=1,npt)
         write(urc,*) ''
         write(urcp) trash,((coor(k,j),j=1,npt),k=1,3)
 10   continue


      end
